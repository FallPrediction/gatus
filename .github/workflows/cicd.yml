name: Deploy Application

on:
  push:
    branches:
      - master

jobs:
  create-deployment-artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - run: git checkout HEAD

      - name: Create deployment artifact
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: tar -czf "${{ github.sha }}.tar.gz" *

      - name: Store artifact for distribution
        uses: actions/upload-artifact@v3
        with:
          name: app-build
          path: ${{ github.sha }}.tar.gz
  deploy-to-server:
    runs-on: ubuntu-latest
    # 需要完成 create-deployment-artifacts 才能執行此 job
    needs: create-deployment-artifacts
    env:
      # 使用環境變數設定應用程式資料夾在正式環境上的路徑。需確認SSH的帳號有權限可以write這幾個路徑
      ARTIFACTS_PATH: /home/${{ secrets.USERNAME }}/app/artifacts
      RELEASE_PATH: /home/${{ secrets.USERNAME }}/app/release
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: app-build

      - name: Copy file via ssh key
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: ${{ github.sha }}.tar.gz
          # 可以使用 ${{ env.變數名稱 }} 存取剛剛設定的環境變數
          target: ${{ env.ARTIFACTS_PATH }}
          overwrite: true

      - name: Active release
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            tar -xzf ${{ env.ARTIFACTS_PATH }}/${{ github.sha }}.tar.gz -C ${{ env.RELEASE_PATH }}
            cd ${{ env.RELEASE_PATH }}
            export TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}
            export TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}
            sudo docker compose up -d --remove-orphans
